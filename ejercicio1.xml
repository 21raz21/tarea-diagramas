<?xml version="1.0" encoding="UTF-8"?>
<bookstore>
  <book category="COOKING">
    <title lang="en">Everyday Italian</title>
    <author>Giada De Laurentiis</author>
    <year>2005</year>
    <price>30.00</price>
  </book>
  <book category="CHILDREN">
    <title lang="en">Harry Potter</title>
    <author>J K. Rowling</author>
    <year>2005</year>
    <price>29.99</price>
  </book>
  <book category="WEB">
    <title lang="en">XQuery Kick Start</title>
    <author>James McGovern</author>
    <author>Per Bothner</author>
    <author>Kurt Cagle</author>
    <author>James Linn</author>
    <author>Vaidyanathan Nagarajan</author>
    <year>2003</year>
    <price>49.99</price>
  </book>
  <book category="WEB">
    <title lang="en">Learning XML</title>
    <author>Erik T. Ray</author>
    <year>2003</year>
    <price>39.95</price>
  </book>
</bookstore> 

1. Mostrar los títulos de los libros con la etiqueta "titulo".

for $book in bookstore/book/title
return $book

2. Mostrar los libros cuyo precio sea menor o igual a 30. Primero incluyendo la condición en la cláusula "where" y luego en la ruta del XPath.

for $book in bookstore/book
where $book/price <= 30
return $book

3. Mostrar sólo el título de los libros cuyo precio sea menor o igual a 30.
for $book in bookstore/book [price<=30]
return $book/title      

4. Mostrar sólo el título sin atributos de los libros cuyo precio sea menor o igual a 30.
for $book in bookstore/book [price<=30]
return <title>{$book}</title>


5. Mostrar el título y el autor de los libros del año 2005, y etiquetar cada uno de ellos con "lib2005".
for $book in bookstore/book[year = 2005]
return <lib2005>{$book}</lib2005>

6. Mostrar los años de publicación, primero con "for" y luego con "let" para comprobar la diferencia entre ellos. Etiquetar la salida con "publicacion".

Con FOR
for $book in bookstore/book/year
return <publicacion>{$book}</publicacion>

Con LET
let $book := bookstore/book[year = 2005]
return <publicacion>{$book}</publicacion>



7. Mostrar los libros ordenados primero por "category" y luego por "title" en una sola consulta.
for $book in bookstore/book
order by $book/@category/title
return $book

8. Mostrar cuántos libros hay, y etiquetarlo con "total".
for $book in bookstore/book
return <total>{$book}</total>

9. Mostrar los títulos de los libros y al final una etiqueta con el número total de libros.



10. Mostrar el precio mínimo y máximo de los libros.
let $min := min(
  for $book in //bookstore/book
  return $book/price/text())

let $max := max(
  for $book in //bookstore/book
  return $book/price/text())
return
  <resultado>
    <max>{$max}</max>
    <min>{$min}</min>
  </resultado>
11. Mostrar el título del libro, su precio y su precio con el IVA incluido, cada uno con su propia etiqueta. Ordénalos por precio con IVA.

12. Mostrar la suma total de los precios de los libros con la etiqueta "total".

13. Mostrar cada uno de los precios de los libros, y al final una nueva etiqueta con la suma de los precios.

14. Mostrar el título y el número de autores que tiene cada título en etiquetas diferentes.

15. Mostrar en la misma etiqueta el título y entre paréntesis el número de autores que tiene ese título.

16. Mostrar los libros escritos en años que terminen en "3".

17. Mostrar los libros cuya categoría empiece por "C".

18. Mostrar los libros que tengan una "X" mayúscula o minúscula en el título.

19. Mostrar el título y el número de caracteres que tiene cada título, cada uno con su propia etiqueta.

20. Mostrar todos los años en los que se ha publicado un libro eliminando los repetidos. Etiquétalos con "año".

21. Mostrar todos los autores eliminando los que se repiten y ordenados por el número de caracteres que tiene cada autor.

22. Mostrar los títulos en una tabla de HTML.
